[project]
name = "rtc-tools-heat-network"
dynamic = ["version"]
authors = [{ name = "Jim Rojer", email = "jim.rojer@tno.nl" }]
description = "RTC Tools Heat Network is used for ESDLS containing a heat network. It can optimize and low-fidelity simulate OPEX and CAPEX costs as well as provide the optimal asset placements."
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "influxdb >= 5.3.1",
    "pyecore",
    "pymoca >= 0.9.0",
    "rtc-tools == 2.6.0a3",
    "pyesdl >= 21.11.0",
    "pandas >= 1.3.1, < 2.0",
]

[project.optional-dependencies]
dev = [
    #"pip-tools~=6.13.0",  # Installed via create_env script
    "black ~= 22.1.0",
    "flake8 ~= 6.0.0",
    "Flake8-pyproject ~= 1.2.3",
    # "flake8-docstrings ~= 1.7.0", TODO Add in when docstrings are being added
    "flake8-quotes ~= 3.3.2",
    "pytest ~= 7.3.1",
    "pytest-cov ~= 4.0.0",
    "bump2version ~= 1.0.1",
    "mypy ~= 1.5.1",
    "build ~= 1.0.3",
    "setuptools_git_versioning < 2"
]

[project.urls]
homepage = "https://www.nwn.nu"
documentation = "https://readthedocs.org"
repository = "https://github.com/Project-OMOTES/rtc-tools-heat-network"
changelog = "https://github.com/Project-OMOTES/rtc-tools-heat-network/blob/main/CHANGELOG.md"

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools ~= 67.7.2", "wheel ~= 0.40.0", "setuptools-git-versioning"]

[tools.setuptools]
packages = ["src/rtctools_heat_network"]

[tool.setuptools-git-versioning]
enabled = true

[tool.pytest.ini_options]
addopts = "--cov=rtctools_heat_network --cov-report html --cov-report term-missing --cov-fail-under 67"

[tool.coverage.run]
source = ["src"]

[tool.flake8]
exclude = ['.venv/*', 'venv/*', 'doc/*']
ignore = ['Q000', 'D401', 'W503']
per-file-ignores = ['__init__.py:F401', 'test_main.py:D100,D101,D102,D103']
max-line-length = 100
count = true

[tool.black]
line-length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
exclude = [
    '.venv/*',
    'venv/*',
    'doc/*',
    'build',
    'component',
    'testscript',
    'testmodel',
    'tryouts.py',
]

# mypy per-module options:
[[tool.mypy.overrides]]
module = "unit_test.*"
check_untyped_defs = true
ignore_missing_imports = true
